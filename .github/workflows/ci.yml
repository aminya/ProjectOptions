name: ci
on:
  pull_request:
  push:
    branches:
      - main
      - master

jobs:
  Test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-2022
          - ubuntu-22.04
          - macos-13
          # - macos-14
        compiler:
          - llvm
          - gcc
        vcvarsall:
          - true
        include:
          - os: "windows-2022"
            compiler: "msvc"
            vcvarsall: true
          - os: "windows-2022"
            compiler: "msvc"
            cmake_generator: "Ninja"
            vcvarsall: true
          - os: "windows-2022"
            compiler: "msvc"
            cmake_generator: "Ninja"
            vcvarsall: false
          - os: "windows-2022"
            compiler: "msvc"
            vcvarsall: false
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/vcpkg
            ./build/vcpkg_installed
            ${{ env.HOME }}/.cache/vcpkg/archives
            ${{ env.XDG_CACHE_HOME }}/vcpkg/archives
            ${{ env.LOCALAPPDATA }}\vcpkg\archives
            ${{ env.APPDATA }}\vcpkg\archives
          key: ${{ runner.os }}-${{ matrix.compiler }}-${{ env.BUILD_TYPE }}-${{ hashFiles('**/CMakeLists.txt', './vcpkg.json')}}
          restore-keys: |
            ${{ runner.os }}-${{ env.BUILD_TYPE }}-

      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          compiler: ${{ matrix.compiler }}
          vcvarsall: ${{ contains(matrix.os, 'windows') && matrix.vcvarsall }}
          cmake: true
          ninja: true
          vcpkg: true
          conan: 2.6.0
          cppcheck: true
          cmakelang: true
          clang-tidy: true
          task: true
          doxygen: true
          python: true

      - name: Test
        if: ${{ !cancelled() }}
        run: |
          task test
        env:
          CMAKE_GENERATOR: ${{ matrix.cmake_generator }}

      - name: Lint
        run: |
          task lint
